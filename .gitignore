# Prerequisites
*.d

# Compiled Object files
*.slo
*.lo
*.o
*.obj

# Precompiled Headers
*.gch
*.pch

# Compiled Dynamic libraries
*.so
*.dylib
*.dll

# Fortran module files
*.mod
*.smod

# Compiled Static libraries
*.lai
*.la
*.a
*.lib

# Executables
*.exe
*.out
*.app


# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg

# PyInstaller
#  Usually these files are written by a script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since
#   the code is designed to run in multiple environments; otherwise,
#   check them into your repository:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type checker
.pytype/

# Cython debug symbols
cython_debug/


# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components/

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
web_modules/

# TypeScript cache
*.tsbuildinfo

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variable files
.env
.env.test
.env.production
.env.development

# parcel-bundler cache (https://parceljs.org/)
.cache

# next.js build output
.next
out

# nuxt.js build / generate output
.nuxt
dist

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port


# Visual studio

## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.

# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Mono auto generated files
mono_crash.*

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/

# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# Visual Studio 2015/2017 cache/options directory
.vs/

# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# Visual Studio 2017 auto generated files
Generated\ Files/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUnit
*.VisualState.xml
TestResult.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# DNX
project.lock.json
artifacts/

*_i.c
*_p.c
*_i.h
*.ilk
*.meta
*.obj
*.pch
*.pdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.ipch

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# JustCode is a .NET coding add-in
.JustCode

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# TODO: Comment the next line if you want to checkin your web deploy settings
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# Microsoft Azure Web App publish settings
*.dat
*.publishsettings
*.azureSettings
*.cloud.user

# Microsoft Azure PowerShell Commands
*.ps1
*.ps1xml
*.ps2
*.ps2xml
*.psd1
*.psd1xml
*.pssc

# Windows Azure (extends to Microsoft Azure)
*.csdef
*.csman
*.cscfg
*.csx
*.settings
*.sou
*.symbols

# Windows Store app package directory
AppPackages/
BundleArtifacts/

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# Trace Log Files
*.trx

# Resharper
_ReSharper*/
*.[Rr]e[Ss]harper

# TeamCity code coverage results
*.dotCover

# Visual Studio coverage results
*.coverage
*.coveragexml

# NCrunch
*.crunch*.local.xml

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# TODO: Comment the next line if you want to checkin your web deploy settings
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/packages/*
# except build/, which is used as an MSBuild target.
!**/packages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/packages/repositories.config
# NuGet v3's project.json files produces more ignoreable files
*.nuget.props
*.nuget.targets

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Windows Store app Intermediate Files
ProjectName.StoreAssociation.xml
_pkginfo.txt

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!*.[Cc]ache/

# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
orleans.codegen.cs

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm

# SQL Server files
*.mdf
*.ldf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvslog

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
.paket/paket.exe
paket-files/

# FAKE - F# Make
.fake/

# JetBrains Rider
.idea/
*.sln.iml

# CodeRush
.cr/cr.cnf

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc
*.pyo
*.pyd
*.pytest_cache/
.python_test_results/

# Cake - Uncomment if you have this configuration file in the root directory
# tools/

# Azure Stream Analytics
ASAPaths/

# SQL Server Extended Events
*.xel
*.xel*
*.xem

# TypeScript cache
*.tsbuildinfo

# Spyder project settings
.spyderproject
.spyproject

# Visual Studio Code
.vscode/


# PyCharm

# JetBrains specific folder
.idea/

# User-specific stuff:
*.iws

# Audio-specific stuff
*.mp3

# Project specific stuff
*.iml

# Module specific stuff
*.iml
*.iws

# CMake
cmake-build-*/

# Mongo Explorer plugin
.idea/.mongodb/

# File-based project format
*.iws

# IntelliJ
out/

# mpeltonen/sbt-idea plugin
.idea_modules/

# JIRA plugin
atlassian-ide-plugin.xml

# Cursive Clojure plugin
.idea/replstate.xml

# Crashlytics plugin (for Android Studio and IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties
fabric.properties

# Editor-based Rest Client
.idea/httpRequests/

# Android studio 3.1+ serialized cache file
.idea/caches/build_file_checksums.ser

# Android Studio 3.2+ serialized cache file
.idea/caches/frame_caches.ser

# Android Studio 3.5+ serialized cache file
.idea/caches/gradle_models.ser

# Android Studio 3.5+ serialized cache file
.idea/caches/task_history.ser

# Android Studio 3.5+ serialized cache file
.idea/caches/project_structure.ser

# Android Studio 3.5+ serialized cache file
.idea/caches/code_styles.ser

# Android Studio 3.5+ serialized cache file
.idea/caches/module_info.ser

# Android Studio 3.5+ serialized cache file
.idea/caches/gradle_models.ser

# Android Studio 3.5+ serialized cache file
.idea/caches/task_history.ser

# Android Studio 3.5+ serialized cache file
.idea/caches/project_structure.ser

# Android Studio 3.5+ serialized cache file
.idea/caches/code_styles.ser

# Android Studio 3.5+ serialized cache file
.idea/caches/module_info.ser

# Android Studio 3.5+ serialized cache file
.idea/caches/gradle_models.ser

# Android Studio 3.5+ serialized cache file
.idea/caches/task_history.ser

# Android Studio 3.5+ serialized cache file
.idea/caches/project_structure.ser

# Android Studio 3.5+ serialized cache file
.idea/caches/code_styles.ser

# Android Studio 3.5+ serialized cache file
.idea/caches/module_info.ser

# Android Studio 3.5+ serialized cache file
.idea/caches/gradle_models.ser

# Android Studio 3.5+ serialized cache file
.idea/caches/task_history.ser

# Android Studio 3.5+ serialized cache file
.idea/caches/project_structure.ser

# Android Studio 3.5+ serialized cache file
.idea/caches/code_styles.ser

# Android Studio 3.5+ serialized cache file
.idea/caches/module_info.ser

# Android Studio 3.5+ serialized cache file
.idea/caches/gradle_models.ser

# Android Studio 3.5+ serialized cache file
.idea/caches/task_history.ser

# Android Studio 3.5+ serialized cache file
.idea/caches/project_structure.ser

# Android Studio 3.5+ serialized cache file
.idea/caches/code_styles.ser

# Android Studio 3.5+ serialized cache file
.idea/caches/module_info.ser

# Android Studio 3.5+ serialized cache file
.idea/caches/gradle_models.ser

# Android Studio 3.5+ serialized cache file
.idea/caches/task_history.ser

# Android Studio 3.5+ serialized cache file
.idea/caches/project_structure.ser

# Android Studio 3.5+ serialized cache file
.idea/caches/code_styles.ser

# Android Studio 3.5+ serialized cache file
.idea/caches/module_info.ser

# Android Studio 3.5+ serialized cache file
.idea/caches/gradle_models.ser

# Android Studio 3.5+ serialized cache file
.idea/caches/task_history.ser

# Android Studio 3.5+ serialized cache file
.idea/caches/project_structure.ser

# Android Studio 3.5+ serialized cache file
.idea/caches/code_styles.ser

# Android Studio 3.5+ serialized cache file
.idea/caches/module_info.ser

# Android Studio 3.5+ serialized cache file
.idea/caches/gradle_models.ser

# Android Studio 3.5+ serialized cache file
.idea/caches/task_history.ser

# Android Studio 3.5+ serialized cache
